// text center
.tar {
  text-align: right;
}
.tal {
  text-align: left;
}
.taj {
  text-align: justify;
}
.tac {
  text-align: center;
}

@each $breakpoint, $point in $breakpoints {
  @include mq($breakpoint) {
    .tar--#{$breakpoint} {
      text-align: right;
    }
    .tal--#{$breakpoint} {
      text-align: left;
    }
    .taj--#{$breakpoint} {
      text-align: justify;
    }
    .tac--#{$breakpoint} {
      text-align: center;
    }
  }
}

// vertical align
.vat {
  vertical-align: top !important;
}
.vam {
  vertical-align: middle !important;
}
.vab {
  vertical-align: bottom !important;
}

@for $i from 1 through 20 {
  .va#{$i * 2} {
    vertical-align: #{$i * 2px};
  }
}

.p {
  line-height: 1.6;
}

// float
.fll {
  float: left;
}
.flr {
  float: right;
}
.fli {
  float: initial !important;
}

// width
.w100 {
  width: 100%;
}
.w50 {
  width: 50%;
}
.w33 {
  width: 33%;
}
.w25 {
  width: 25%;
}

.mnw40p {
  min-width: 40%;
}

.w1 {
  width: 1em;
}

@for $i from 1 through 50 {
  .w#{$i * 2} {
    width: #{$i * 2em};
  }
  .mxw#{$i * 2} {
    max-width: #{$i * 2em};
  }
  .mnw#{$i * 2} {
    min-width: #{$i * 2em};
  }
}

.mxw100 {
  max-width: 100vw;
}

// height
.h100 {
  height: 100%;
}
.h50 {
  height: 50%;
}
.h25 {
  height: 25%;
}

.h1 {
  height: 1em;
}
.h100vh {
  height: 100vh;
}
.mxh60vh {
  max-height: 60vh;
}
.mnh100vh {
  min-height: 100vh;
}

@for $i from 1 through 16 {
  .h#{$i * 2} {
    height: #{$i * 2em};
  }
  .mxh#{$i * 2} {
    max-height: #{$i * 2em};
  }
  .mnh#{$i * 2} {
    min-height: #{$i * 2em};
  }
}

//filter
.ftr-blr-1 {
  filter: blur(2px);
}
.ftr-blr-2 {
  filter: blur(4px);
}
.ftr-blr-3 {
  filter: blur(8px);
}
.ftr-blr-4 {
  filter: blur(16px);
}

// display
.db {
  display: block;
}
.dib {
  display: inline-block;
}
.dit {
  display: table;
}

// position
.poss {
  position: static;
}
.posr {
  position: relative;
}
.posa {
  position: absolute;
}

// font size
.fzxxs {
  font-size: 0.5em;
  letter-spacing: 0.1em;
}
.fzxs {
  font-size: 0.6em;
  letter-spacing: 0.1em;
}
.fzs {
  font-size: 0.8em;
  letter-spacing: 0.03em;
}
.fzm {
  font-size: 1em;
}
.fzl {
  font-size: 1.2em;
}
.fzxl {
  font-size: 1.4em;
}
.fzxxl {
  font-size: 2em;
}
.fzxxxl {
  font-size: 3em;
}
.font_init {
  font-size: initial !important;
}

// font weight
.fwl {
  font-weight: lighter;
}
.fwn {
  font-weight: normal;
}
.fwb {
  font-weight: bold;
}
.fwbr {
  font-weight: bolder;
}

// white space
.wsnw {
  white-space: nowrap;
}
.wsi {
  white-space: initial !important;
}
.tove {
  text-overflow: ellipsis;
}

// overflow
.oh {
  overflow: hidden;
}
.oa {
  overflow: auto;
}
.ov {
  overflow: visible;
}
.os {
  overflow: scroll;
}

// font transform
.tdu {
  text-decoration: underline !important;
}
.flu:first-letter {
  text-transform: uppercase;
}
.ttu {
  text-transform: uppercase;
}
.ttl {
  text-transform: lowercase;
}

// spacing
.spacing {
  letter-spacing: 7.5px;
}

// auto margin
.ma {
  margin: auto !important;
}
.mta {
  margin-top: auto !important;
}
.mla {
  margin-left: auto !important;
}
.mba {
  margin-bottom: auto !important;
}
.mra {
  margin-right: auto !important;
}
// reset margin
.m0 {
  margin: 0 !important;
}
.mt0 {
  margin-top: 0 !important;
}
.ml0 {
  margin-left: 0 !important;
}
.mb0 {
  margin-bottom: 0 !important;
}
.mr0 {
  margin-right: 0 !important;
}
.mx0 {
  margin-right: 0 !important;
  margin-left: 0 !important;
}
.my0 {
  margin-top: 0 !important;
  margin-bottom: 0 !important;
}
// reset padding
.p0 {
  padding: 0 !important;
}
.pt0 {
  padding-top: 0 !important;
}
.pl0 {
  padding-left: 0 !important;
}
.pb0 {
  padding-bottom: 0 !important;
}
.pr0 {
  padding-right: 0 !important;
}
.px0 {
  padding-right: 0 !important;
  padding-left: 0 !important;
}
.py0 {
  padding-top: 0 !important;
  padding-bottom: 0 !important;
}

@for $i from 1 through 20 {
  // margin
  .m#{$i * 5} {
    margin: #{$i * 0.5em} !important;
  }
  .mt#{$i * 5} {
    margin-top: #{$i * 0.5em} !important;
  }
  .ml#{$i * 5} {
    margin-left: #{$i * 0.5em} !important;
  }
  .mb#{$i * 5} {
    margin-bottom: #{$i * 0.5em} !important;
  }
  .mr#{$i * 5} {
    margin-right: #{$i * 0.5em} !important;
  }
  .my#{$i * 5} {
    margin-top: #{$i * 0.5em} !important;
    margin-bottom: #{$i * 0.5em} !important;
  }
  .mx#{$i * 5} {
    margin-right: #{$i * 0.5em} !important;
    margin-left: #{$i * 0.5em} !important;
  }

  // margin
  .-m#{$i * 5} {
    margin: #{$i * -0.5em} !important;
  }
  .-mt#{$i * 5} {
    margin-top: #{$i * -0.5em} !important;
  }
  .-ml#{$i * 5} {
    margin-left: #{$i * -0.5em} !important;
  }
  .-mb#{$i * 5} {
    margin-bottom: #{$i * -0.5em} !important;
  }
  .-mr#{$i * 5} {
    margin-right: #{$i * -0.5em} !important;
  }

  // padding
  .p#{$i * 5} {
    padding: #{$i * 0.5em} !important;
  }
  .pt#{$i * 5} {
    padding-top: #{$i * 0.5em} !important;
  }
  .pl#{$i * 5} {
    padding-left: #{$i * 0.5em} !important;
  }
  .pb#{$i * 5} {
    padding-bottom: #{$i * 0.5em} !important;
  }
  .pr#{$i * 5} {
    padding-right: #{$i * 0.5em} !important;
  }
  .py#{$i * 5} {
    padding-top: #{$i * 0.5em} !important;
    padding-bottom: #{$i * 0.5em} !important;
  }
  .px#{$i * 5} {
    padding-right: #{$i * 0.5em} !important;
    padding-left: #{$i * 0.5em} !important;
  }
}

.-mt60 {
  margin-top: -6em;
}

// z-index
@for $i from 0 through 10 {
  .z#{$i * 10} {
    z-index: #{$i * 10};
  }
}

// colors
@each $name, $color in $colors {
  .is-#{"" + $name} {
    background-color: $color;
    color: textColor($color);

    &[disabled] {
      background-color: mix(color(gray), $color, 50%);
      color: textColor(mix(color(gray), $color, 50%));
    }

    &.is-active {
      background-color: textColor($color);
      color: $color;
    }
  }

  .bg-#{"" + $name} {
    background-color: $color;
  }

  .br-#{"" + $name} {
    border-color: $color !important;
  }

  .txt-#{"" + $name} {
    color: $color;
  }

  .fill-#{"" + $name} {
    fill: $color;
  }

  .stroke-#{"" + $name} {
    stroke: $color;
  }

  @each $breakpoint, $point in $breakpoints {
    @include mq($breakpoint) {
      .is-#{"" + $name} #{$breakpoint} {
        background-color: $color;
        color: textColor($color);

        &[disabled] {
          background-color: mix(color(gray), $color, 50%);
          color: textColor(mix(color(gray), $color, 50%));
        }

        &.is-active {
          background-color: textColor($color);
          color: $color;
        }
      }

      .bg-#{"" + $name}--#{$breakpoint} {
        background-color: $color;
      }

      .br-#{"" + $name}--#{$breakpoint} {
        border-color: $color !important;
      }

      .txt-#{"" + $name}--#{$breakpoint} {
        color: $color;
      }

      .fill-#{"" + $name}--#{$breakpoint} {
        fill: $color;
      }

      .stroke-#{"" + $name}--#{$breakpoint} {
        stroke: $color;
      }
    }
  }
}

.txt-shadow {
  text-shadow: 0.05em 0.105em 0 fade-out(color(black), 0.8);
}

.txt-mix-dif {
  mix-blend-mode: difference;
}

@each $name, $color in $colors {
  .is-#{"" + $name}--hover:active,
  .is-#{"" + $name}--hover:focus,
  .is-#{"" + $name}--hover:hover {
    background-color: $color;
    color: textColor($color);

    &[disabled] {
      background-color: mix(color(gray), $color, 50%);
      color: textColor(mix(color(gray), $color, 50%));
    }

    &.is-active {
      background-color: textColor($color);
      color: $color;
    }
  }

  .bg-#{"" + $name}--hover:active,
  .bg-#{"" + $name}--hover:focus,
  .bg-#{"" + $name}--hover:hover {
    background-color: $color;
  }

  .br-#{"" + $name}--hover:active,
  .br-#{"" + $name}--hover:focus,
  .br-#{"" + $name}--hover:hover {
    border-color: $color !important;
  }

  .txt-#{"" + $name}--hover:hover {
    color: $color;
  }
}

@for $i from 1 through 4 {
  .bra-#{$i} {
    border: #{$i * 0.1}em solid;
  }
  .brt-#{$i} {
    border-top: #{$i * 0.1}em solid;
  }
  .brb-#{$i} {
    border-bottom: #{$i * 0.1}em solid;
  }
  .brl-#{$i} {
    border-left: #{$i * 0.1}em solid;
  }
  .brr-#{$i} {
    border-right: #{$i * 0.1}em solid;
  }
}

.bg-none {
  background: none !important;
}

// disabled
.is-disabled {
  opacity: 0.6;
  cursor: not-allowed;
}

.pointer {
  cursor: pointer;
}

// gradient
.grad-primary {
  @include gradient(right bottom, color(primary), color(success));
}

.grad-success {
  @include gradient(right bottom, color(success), darken(color(success), 10%));
}

.grad-warning {
  @include gradient(right bottom, color(warning), darken(color(warning), 10%));
}

.grad-danger {
  @include gradient(right bottom, color(danger), darken(color(danger), 10%));
}

.grad-white {
  @include gradient(right bottom, color(white), darken(color(white), 5%));
}

.grad-light {
  @include gradient(right bottom, color(light), darken(color(light), 5%));
}

// hidden

.hidden {
  display: none !important;
}
.visible {
  display: initial !important;
}
.visible_dib {
  display: inline-block !important;
}

@each $breakpoint, $point in $breakpoints {
  @include mq($breakpoint) {
    .hidden--#{$breakpoint} {
      display: none !important;
    }
    .visible--#{$breakpoint} {
      display: initial !important;
    }
    .visible_dib--#{$breakpoint} {
      display: inline-block !important;
    }
  }
}

// border-radius {
.rad0 {
  border-radius: 0;
}
.rad {
  border-radius: 0.2em;
}
.radb {
  border-radius: 0 0 0.2em 0.2em;
}
.radt {
  border-radius: 0.2em 0.2em 0 0;
}
.rad2 {
  border-radius: 2em;
}
.rad50 {
  border-radius: 50%;
}
.rad100 {
  border-radius: 100%;
}

// border-none

.border-none {
  border: none;
}

// loading
.is-loading {
  z-index: 1;
  position: relative;

  &:before {
    content: "";
    display: block;
    position: absolute;
    z-index: 1000;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-color: fade-out(color(dark), 0.6);
  }

  &.button:before {
    background-color: inherit;
  }

  &:after {
    content: "";
    position: absolute;
    z-index: 1020;
    display: block;
    top: 50%;
    left: 50%;
    font-size: 1em;
    line-height: 0;
    width: 1em;
    height: 1em;
    border-radius: 1em;
    text-indent: 0;
    background-color: white;
    box-shadow: 0 0 1em fade-out(black, 0.6);
    transform: translateX(-50%) translateY(-50%);
    animation: loading infinite 3s;
  }
}

// shadow
.shadowxs {
  box-shadow: shadow(xsmall);
}
.shadows {
  box-shadow: shadow(small);
}
.shadow {
  box-shadow: shadow(medium);
}
.shadowl {
  box-shadow: shadow(large);
}

// absolute center
.posacenter {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translateY(-50%) translateX(-50%);
}

// absolute vertical center
.posava {
  position: absolute;
  top: 50%;
  transform: translateY(-50%);
}

.posaha {
  position: absolute;
  left: 50%;
  transform: translateX(-50%);
}

@for $i from 0 through 10 {
  .right#{$i} {
    right: #{$i * 0.5em};
  }
  .top#{$i} {
    top: #{$i * 0.5em};
  }
  .left#{$i} {
    left: #{$i * 0.5em};
  }
  .bottom#{$i} {
    bottom: #{$i * 0.5em};
  }
}

// line height
@for $i from 1 through 10 {
  .lh#{$i} {
    line-height: #{$i * 0.5em} !important;
  }
}

.invisible {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  opacity: 0;
}

.no-border {
  border: none !important;
}

.border {
  border: 1px solid transparent;
}

@for $i from 2 through 5 {
  .border#{$i} {
    border: #{$i * 1px} solid transparent;
  }
}

.bdb {
  border-bottom: 1px solid transparent;
}
.bdt {
  border-top: 1px solid transparent;
}
.bdl {
  border-left: 1px solid transparent;
}
.bdr {
  border-right: 1px solid transparent;
}
.hoverable {
  cursor: pointer;
}
.b0 {
  bottom: 0;
}
.l0 {
  left: 0;
}
.bw {
  word-wrap: break-word;
}

@media screen and (max-width: 600px) {
  .my-title {
    font-size: 16px !important;
  }
  .my-subtitle {
    font-size: 14px !important;
  }
  .block-img {
    text-align: center;
  }
  .head-info {
    display: table !important;
    margin: auto !important;
  }
}
@media screen and (min-width: 601px) {
  .my-title {
    font-size: 22px !important;
  }
  .my-subtitle {
    font-size: 18px !important;
  }
  .block-img {
    float: left;
  }
  .head-info {
    margin-left: 3.5em !important;
  }
}
